addDataSource IJIC
addEntityType PERSON
addEntityType ORGANIZATION

addFeature  {"feature": "RECORD_TYPE", "class": "BIO_FEATURE", "behavior": "FVME", "anonymize": "No", "candidates": "No", "standardize": "", "expression": "", "comparison": "EXACT_COMP", "elementList": [{"element": "TYPE", "expressed": "No", "compared": "Yes"}]}
addAttribute {"attribute": "RECORD_TYPE", "class": "ATTRIBUTE", "feature": "RECORD_TYPE", "element": "TYPE", "required": "Yes", "default": "", "advanced": "No", "internal": "No"}

addFeature {"feature": "COUNTRY", "class": "OTHER", "behavior": "FVM", "anonymize": "No", "candidates": "No", "standardize": "", "expression": "", "comparison": "EXACT_COMP", "elementList": [{"element": "CODE", "expressed": "No", "compared": "Yes"}]}
addAttribute {"attribute": "COUNTRY_CODE", "class": "ATTRIBUTE", "feature": "COUNTRY", "element": "CODE", "required": "Yes", "default": "", "advanced": "Yes", "internal": "Yes"}

#--additional candidate builders for name hashes
addToNamehash {"feature": "COUNTRY", "element": "CODE"}

#--make the group association type default to (org) so that it doesn't have to be specified and we get matches across
deleteAttribute {"attribute": "GROUP_ASSOCIATION_TYPE"}
addAttribute {"attribute": "GROUP_ASSOCIATION_TYPE", "class": "ATTRIBUTE", "feature": "GROUP_ASSOCIATION", "element": "TYPE", "required": "No", "default": "(org)", "advanced": "No", "internal": "No"}

#--optional composite keys
addFeature {"feature": "CK_NAME_DOB_CNTRY", "class": "OTHER", "behavior": "FF", "anonymize": "No", "candidates": "Yes", "derived": "Yes", "standardize": "", "expression": "", "comparison": "", "elementList": [{"element": "EXPRESSION", "expressed": "No", "compared": "No"}]}
addAttribute {"attribute": "CK_NAME_DOB_CNTRY", "class": "OTHER", "feature": "CK_NAME_DOB_CNTRY", "element": "EXPRESSION", "required": "Yes", "default": "", "advanced": "Yes", "internal": "Yes"}

addFeature {"feature": "CK_NAME_DOB", "class": "OTHER", "behavior": "FF", "anonymize": "No", "candidates": "Yes", "derived": "Yes", "standardize": "", "expression": "", "comparison": "", "elementList": [{"element": "EXPRESSION", "expressed": "No", "compared": "No"}]}
addAttribute {"attribute": "CK_NAME_DOB", "class": "OTHER", "feature": "CK_NAME_DOB", "element": "EXPRESSION", "required": "Yes", "default": "", "advanced": "Yes", "internal": "Yes"}

addFeature {"feature": "CK_NAME_CNTRY", "class": "OTHER", "behavior": "FF", "anonymize": "No", "candidates": "Yes", "derived": "Yes", "standardize": "", "expression": "", "comparison": "", "elementList": [{"element": "EXPRESSION", "expressed": "No", "compared": "No"}]}
addAttribute {"attribute": "CK_NAME_CNTRY", "class": "OTHER", "feature": "CK_NAME_CNTRY", "element": "EXPRESSION", "required": "Yes", "default": "", "advanced": "Yes", "internal": "Yes"}

addFeature {"feature": "CK_NAME_ORGNAME", "class": "OTHER", "behavior": "FF", "anonymize": "No", "candidates": "Yes", "derived": "Yes", "standardize": "", "expression": "", "comparison": "", "elementList": [{"element": "EXPRESSION", "expressed": "No", "compared": "No"}]}
addAttribute {"attribute": "CK_NAME_ORGNAME", "class": "OTHER", "feature": "CK_NAME_ORGNAME", "element": "EXPRESSION", "required": "Yes", "default": "", "advanced": "Yes", "internal": "Yes"}

#--best practice for watch list screening - make name and address used for candidates
#--caveat: minor performance impact and improvement
#setFeature {"feature": "NAME", "candidates": "Yes"}
#setFeature {"feature": "ADDRESS", "candidates": "Yes"}
#setFeature {"feature": "GROUP_ASSOCIATION", "candidates": "Yes"}

#--best practice for watch list screening - turn off distinct names 
#--caveat: potential for false positives as lower quality aka matches are also reported: If "Andy Jones" and "Alex Jones" both have 
#-- an aka of "A jones", the lower quality name match is not considered when distinct is on, but is a match when distinct is off!
#setDistinct Off

save
updateDatabase
